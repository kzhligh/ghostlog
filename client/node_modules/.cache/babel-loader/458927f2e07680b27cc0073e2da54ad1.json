{"ast":null,"code":"var _jsxFileName = \"/Users/kevinli/Desktop/Code/GhostLog/client/src/components/CommentReplyBox.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\"; //could simply re-use the postbox component and pass some props\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentReplyBox() {\n  _s();\n\n  const [newComment, setNewComment] = useState({\n    username: \"\",\n    comment: \"\"\n  });\n\n  function apiPost() {// fetch(\"/post/new\", {\n    //   method: \"POST\",\n    //   body: JSON.stringify({\n    //     username: newComment.username,\n    //     content: newComment.comment,\n    //   }),\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    // });\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setNewComment(prevValue => {\n      return { ...prevValue,\n        [name]: value\n      };\n    });\n  }\n\n  function handleClick(event) {\n    event.preventDefault();\n    apiPost();\n    setNewComment({\n      username: \"\",\n      comment: \"\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      borderStyle: \"solid\",\n      borderColor: \"black\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [\"reply to above comment\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newComment.username,\n        name: \"username\",\n        type: \"text\",\n        placeholder: \"username\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment.comment,\n        name: \"content\",\n        type: \"text\",\n        placeholder: \"content\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        style: {\n          marginTop: \"20px\"\n        },\n        type: \"submit\",\n        children: \"comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CommentReplyBox, \"2LszLU0c6OeYIwO3ADWp22Pnacs=\");\n\n_c = CommentReplyBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentReplyBox\");","map":{"version":3,"names":["React","useState","useEffect","CommentReplyBox","newComment","setNewComment","username","comment","apiPost","handleChange","event","name","value","target","prevValue","handleClick","preventDefault","borderStyle","borderColor","marginTop"],"sources":["/Users/kevinli/Desktop/Code/GhostLog/client/src/components/CommentReplyBox.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\n//could simply re-use the postbox component and pass some props\nexport default function CommentReplyBox() {\n  const [newComment, setNewComment] = useState({\n    username: \"\",\n    comment: \"\",\n  });\n\n  function apiPost() {\n    // fetch(\"/post/new\", {\n    //   method: \"POST\",\n    //   body: JSON.stringify({\n    //     username: newComment.username,\n    //     content: newComment.comment,\n    //   }),\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    // });\n  }\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setNewComment((prevValue) => {\n      return {\n        ...prevValue,\n        [name]: value,\n      };\n    });\n  }\n\n  function handleClick(event) {\n    event.preventDefault();\n    apiPost();\n    setNewComment({\n      username: \"\",\n      comment: \"\",\n    });\n  }\n\n  return (\n    <div style={{ borderStyle: \"solid\", borderColor: \"black\" }}>\n      <form>\n        reply to above comment\n        <input\n          value={newComment.username}\n          name=\"username\"\n          type=\"text\"\n          placeholder=\"username\"\n          onChange={handleChange}\n        />\n        <textarea\n          value={newComment.comment}\n          name=\"content\"\n          type=\"text\"\n          placeholder=\"content\"\n          onChange={handleChange}\n        />\n        <button\n          onClick={handleClick}\n          style={{ marginTop: \"20px\" }}\n          type=\"submit\"\n        >\n          comment\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;;AACA,eAAe,SAASC,eAAT,GAA2B;EAAA;;EACxC,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC;IAC3CK,QAAQ,EAAE,EADiC;IAE3CC,OAAO,EAAE;EAFkC,CAAD,CAA5C;;EAKA,SAASC,OAAT,GAAmB,CACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD;;EAED,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;IAC3B,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkBF,KAAK,CAACG,MAA9B;IACAR,aAAa,CAAES,SAAD,IAAe;MAC3B,OAAO,EACL,GAAGA,SADE;QAEL,CAACH,IAAD,GAAQC;MAFH,CAAP;IAID,CALY,CAAb;EAMD;;EAED,SAASG,WAAT,CAAqBL,KAArB,EAA4B;IAC1BA,KAAK,CAACM,cAAN;IACAR,OAAO;IACPH,aAAa,CAAC;MACZC,QAAQ,EAAE,EADE;MAEZC,OAAO,EAAE;IAFG,CAAD,CAAb;EAID;;EAED,oBACE;IAAK,KAAK,EAAE;MAAEU,WAAW,EAAE,OAAf;MAAwBC,WAAW,EAAE;IAArC,CAAZ;IAAA,uBACE;MAAA,kDAEE;QACE,KAAK,EAAEd,UAAU,CAACE,QADpB;QAEE,IAAI,EAAC,UAFP;QAGE,IAAI,EAAC,MAHP;QAIE,WAAW,EAAC,UAJd;QAKE,QAAQ,EAAEG;MALZ;QAAA;QAAA;QAAA;MAAA,QAFF,eASE;QACE,KAAK,EAAEL,UAAU,CAACG,OADpB;QAEE,IAAI,EAAC,SAFP;QAGE,IAAI,EAAC,MAHP;QAIE,WAAW,EAAC,SAJd;QAKE,QAAQ,EAAEE;MALZ;QAAA;QAAA;QAAA;MAAA,QATF,eAgBE;QACE,OAAO,EAAEM,WADX;QAEE,KAAK,EAAE;UAAEI,SAAS,EAAE;QAAb,CAFT;QAGE,IAAI,EAAC,QAHP;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAhBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA4BD;;GAlEuBhB,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}
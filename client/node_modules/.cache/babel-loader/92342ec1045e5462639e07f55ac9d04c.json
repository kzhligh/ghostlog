{"ast":null,"code":"var _jsxFileName = \"/Users/kevinli/Desktop/Code/GhostLog/client/src/pages/Reddit.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Postbox from \"../components/Postbox\";\nimport Post from \"../components/Post\"; //this page will display essentially ALL the posts\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Reddit() {\n  _s();\n\n  const [postsArray, setPostsArray] = useState([]); //the issue now is how to use useState to post ALL the posts...???\n\n  useEffect(() => {\n    getApi();\n  }, [postsArray]);\n\n  function getApi() {\n    // console.log(\"we here\");\n    // var responseClone;\n    fetch(\"/post/index\", {\n      method: \"GET\"\n    }).then(response => // responseClone = response.clone(); // 2\n    response.json()).then(data => {\n      console.log(\"SHEEE\", data); //lets undo the data, and pre-prend it to our postsArray\n\n      const newArray = [];\n      data.forEach(post => {\n        newArray.push({\n          username: post.username,\n          content: post.content,\n          id: post._id\n        });\n      });\n      console.log(\"after i populate new array\", newArray);\n      setPostsArray(newArray);\n      console.log(\"my posts array is \", postsArray);\n    });\n  } //   function handleClick(event) {\n  //     event.preventDefault();\n  //     getApi();\n  //   }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Postbox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), postsArray.map(post => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        username: post.username,\n        content: post.content\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Reddit, \"uTP4Sc3saKwikXgEH3xD2QjzBig=\");\n\n_c = Reddit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reddit\");","map":{"version":3,"names":["React","useState","useEffect","Postbox","Post","Reddit","postsArray","setPostsArray","getApi","fetch","method","then","response","json","data","console","log","newArray","forEach","post","push","username","content","id","_id","map"],"sources":["/Users/kevinli/Desktop/Code/GhostLog/client/src/pages/Reddit.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Postbox from \"../components/Postbox\";\nimport Post from \"../components/Post\";\n\n//this page will display essentially ALL the posts\nexport default function Reddit() {\n  const [postsArray, setPostsArray] = useState([]);\n\n  //the issue now is how to use useState to post ALL the posts...???\n\n  useEffect(() => {\n    getApi();\n  }, [postsArray]);\n\n  function getApi() {\n    // console.log(\"we here\");\n    // var responseClone;\n    fetch(\"/post/index\", { method: \"GET\" })\n      .then((response) =>\n        // responseClone = response.clone(); // 2\n        response.json()\n      )\n      .then((data) => {\n        console.log(\"SHEEE\", data);\n        //lets undo the data, and pre-prend it to our postsArray\n        const newArray = [];\n        data.forEach((post) => {\n          newArray.push({\n            username: post.username,\n            content: post.content,\n            id: post._id,\n          });\n        });\n        console.log(\"after i populate new array\", newArray);\n        setPostsArray(newArray);\n        console.log(\"my posts array is \", postsArray);\n      });\n  }\n\n  //   function handleClick(event) {\n  //     event.preventDefault();\n  //     getApi();\n  //   }\n\n  return (\n    <div>\n      <Postbox />\n      {postsArray.map((post) => {\n        return (\n          <Post username={post.username} key={post.id} content={post.content} />\n        );\n      })}\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CAEA;;;AACA,eAAe,SAASC,MAAT,GAAkB;EAAA;;EAC/B,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C,CAD+B,CAG/B;;EAEAC,SAAS,CAAC,MAAM;IACdM,MAAM;EACP,CAFQ,EAEN,CAACF,UAAD,CAFM,CAAT;;EAIA,SAASE,MAAT,GAAkB;IAChB;IACA;IACAC,KAAK,CAAC,aAAD,EAAgB;MAAEC,MAAM,EAAE;IAAV,CAAhB,CAAL,CACGC,IADH,CACSC,QAAD,IACJ;IACAA,QAAQ,CAACC,IAAT,EAHJ,EAKGF,IALH,CAKSG,IAAD,IAAU;MACdC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,IAArB,EADc,CAEd;;MACA,MAAMG,QAAQ,GAAG,EAAjB;MACAH,IAAI,CAACI,OAAL,CAAcC,IAAD,IAAU;QACrBF,QAAQ,CAACG,IAAT,CAAc;UACZC,QAAQ,EAAEF,IAAI,CAACE,QADH;UAEZC,OAAO,EAAEH,IAAI,CAACG,OAFF;UAGZC,EAAE,EAAEJ,IAAI,CAACK;QAHG,CAAd;MAKD,CAND;MAOAT,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CC,QAA1C;MACAV,aAAa,CAACU,QAAD,CAAb;MACAF,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCV,UAAlC;IACD,CAnBH;EAoBD,CAhC8B,CAkC/B;EACA;EACA;EACA;;;EAEA,oBACE;IAAA,wBACE,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QADF,EAEGA,UAAU,CAACmB,GAAX,CAAgBN,IAAD,IAAU;MACxB,oBACE,QAAC,IAAD;QAAM,QAAQ,EAAEA,IAAI,CAACE,QAArB;QAA6C,OAAO,EAAEF,IAAI,CAACG;MAA3D,GAAoCH,IAAI,CAACI,EAAzC;QAAA;QAAA;QAAA;MAAA,QADF;IAGD,CAJA,CAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GAjDuBlB,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}